(window.webpackJsonp=window.webpackJsonp||[]).push([[403],{748:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("本文用以收录和汇总使用正则表达式的实战案例。只有不断地摸索、碰撞、实现，才有可能慢慢真正地理解、掌握正则表达式的相关用法。")]),t._v(" "),a("h2",{attrs:{id:"例一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例一"}},[t._v("#")]),t._v(" 例一")]),t._v(" "),a("p",[t._v("业务需求：在 VS Code 里面，编辑 Mardkown 文本文体。批量查找以中文全角括号序号开头的例句，然后在括号序号和文本之间插入 HTML 代码，以添加特定的样式。本例涉及到的正则表达式知识点是括号的分组和分组引用。")]),t._v(" "),a("p",[t._v("查找："),a("code",[t._v("（(\\d)）")])]),t._v(" "),a("p",[t._v("查找以中文全角开括号 "),a("code",[t._v("（")]),t._v(" 开头、以闭括号 "),a("code",[t._v("）")]),t._v(" 结尾、中间以单位数字为序号的文本内容。中间的单位数字使用英文半角括号 "),a("code",[t._v("()")]),t._v(" 括起，用来捕获分组。匹配格式如下的文本：")]),t._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("（1）起诉书指控：被告人令计划利用其担任中共中央办公厅副主任、主任、中央书记处书记、中央统战部部长、全国政协副主席等职务上的便利，为他人谋取利益，索取、非法收受他人巨额财物；……\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("替换："),a("code",[t._v('（$1）<Badge text="错误" type="error" vertical="middle"/>')])]),t._v(" "),a("p",[t._v("替换内容仍然以中文全角开括号 "),a("code",[t._v("（")]),t._v(" 开头、闭括号 "),a("code",[t._v("）")]),t._v(" 结尾、括号中间插入捕获的引用分组，"),a("code",[t._v("$1")]),t._v(" 指代的是捕获的第一个分组。再在闭括号 "),a("code",[t._v("）")]),t._v(" 后面添加相应的代码块内容 "),a("code",[t._v('<Badge text="错误" type="error" vertical="middle"/>')]),t._v("。替换后变成格式如下的文本：")]),t._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("（1）"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Badge")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("错误"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("vertical")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("middle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" 起诉书指控：被告人令计划利用其担任中共中央办公厅副主任、主任、中央书记处书记、中央统战部部长、全国政协副主席等职务上的便利，为他人谋取利益，索取、非法收受他人巨额财物；……\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"例二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例二"}},[t._v("#")]),t._v(" 例二")]),t._v(" "),a("p",[t._v("业务需求：在 VS Code 里面，编辑 Mardkown 文本文体。通过正则表达式批量查找和删除 Hexo 插件的样式标记，例如，下文中形如 "),a("code",[t._v("{% folding green, 查看答案 %}")]),t._v(" 和 "),a("code",[t._v("{% endfolding %}")]),t._v(" 的样式标记。采用的正则表达式是 "),a("code",[t._v("/{% .*? %/}")]),t._v("，替换内容不填为空即可。经测试，在 VS Code 编辑器里面无效，但在 Sublime Text 4 有效。有人知道为什么吗？")]),t._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("{% folding green, 查看答案 %}\n\n"),a("span",{pre:!0,attrs:{class:"token bold"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("解析：Parallelism; Diction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")])]),t._v("\n\nThe intent of the sentence is to "),a("span",{pre:!0,attrs:{class:"token bold"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("show two effects of the surge in flights")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("**")])]),t._v(". These effects should be stated in parallel ways, instead of the construction "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("to lead … and prompts …")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" used in the original sentence. Using participial phrases introduced by leading and prompting solves this problem. The phrase "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("55 percent more delays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" is not as clear as the phrase "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("a 55 percent increase in delays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(".\n\nA. "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("To lead and prompts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" are not parallel; "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("55 percent more delays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" is not clear.\n\nB. "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("55 percent more delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" is unclear.\n\nC. To lead and prompt are not parallel; the meaning of "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("55 percent increase in delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" is not clear.\n\nD. Participial phrase introduced by leading is preferable to the unclear infinitive phrase to lead to; "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("an increase of 55 percent in delays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" is awkward and wordy.\n\nE. Correct. Leading and prompting are parallel in this sentence; the phrase "),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("a 55 percent increase in delays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("_")])]),t._v(" is clear and concise.\n\n{% endfolding %}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h2",{attrs:{id:"例三"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例三"}},[t._v("#")]),t._v(" 例三")]),t._v(" "),a("p",[t._v("业务需求：在 VS Code 里面，编辑 Mardkown 文本文体。寻找形如 "),a("code",[t._v("[Text](https://somelink.com)")]),t._v(" 的 Markdown link 文本，替换成 "),a("code",[t._v("Text")]),t._v(" 纯文本。采用的正则表达式是 "),a("code",[t._v("\\[(.*?)\\]\\((.*?)\\)")]),t._v("，替换表达式是 "),a("code",[t._v("$1")]),t._v("。注意：匹配闭方括号 "),a("code",[t._v("]")]),t._v(" 时，可以转义也可不转义；匹配闭圆括号 "),a("code",[t._v(")")]),t._v(" 时，必须转义。")])])}),[],!1,null,null,null);a.default=e.exports}}]);