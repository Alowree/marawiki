(window.webpackJsonp=window.webpackJsonp||[]).push([[244],{591:function(v,t,_){"use strict";_.r(t);var e=_(4),l=Object(e.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"html-属性操作-对象属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-属性操作-对象属性"}},[v._v("#")]),v._v(" HTML 属性操作（对象属性）")]),v._v(" "),t("p",[v._v("在 JavaScript 中，有两种操作 HTML 元素属性的方式：一种是使用“对象属性”，另外一种是使用“对象方法”。")]),v._v(" "),t("p",[v._v("不管是用“对象属性”的方式，还是用“对象方法”的方式，都涉及以下 2 种操作：")]),v._v(" "),t("ul",[t("li",[v._v("获取 HTML 属性值")]),v._v(" "),t("li",[v._v("设置 HTML 属性值")])]),v._v(" "),t("p",[v._v("元素操作（第 09 章），准确地说，操作的是“元素节点”；属性操作（第 10 章），准确地说，操作的是“属性节点”。")]),v._v(" "),t("ul",[t("li",[v._v("HTML 属性操作（对象属性）\n"),t("ul",[t("li",[t("code",[v._v("obj.attr")]),v._v("，无法获取自定义属性值")]),v._v(" "),t("li",[t("code",[v._v('obj.attr = "值"')]),v._v("，无法设定自定义属性的值")])])])]),v._v(" "),t("h2",{attrs:{id:"html-属性操作-对象方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-属性操作-对象方法"}},[v._v("#")]),v._v(" HTML 属性操作（对象方法）")]),v._v(" "),t("ul",[t("li",[v._v("HTML 属性操作（对象方法）\n"),t("ul",[t("li",[t("code",[v._v('getAttribute("attr")')]),v._v("，获取自定义属性值")]),v._v(" "),t("li",[t("code",[v._v('setAttribute("attr", "值")')]),v._v("，设定自定义属性的值的")]),v._v(" "),t("li",[t("code",[v._v('removeAttribute("attr")')])]),v._v(" "),t("li",[t("code",[v._v('hasAttribute("atrr")')]),v._v("，返回一个布尔值：如果包含该属性，会返回 true；如果不包含该属性，会返回 false")])])])]),v._v(" "),t("p",[v._v("最后，对于操作 HTML 属性的两种方式，总结如下：")]),v._v(" "),t("ul",[t("li",[v._v("“对象属性方式”和“对象方法方式”，这两种方式都可以操作静态 HTML 的属性，也可以操作动态 DOM 的属性")]),v._v(" "),t("li",[v._v("只有“对象方法方式”才可以操作自定义属性")])]),v._v(" "),t("h2",{attrs:{id:"css-属性操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-属性操作"}},[v._v("#")]),v._v(" CSS 属性操作")]),v._v(" "),t("p",[v._v("CSS 属性操作，指的是使用 JavaScript 来操作一个元素的 CSS 样式。在 JavaScript 中，CSS 属性操作同样有两种：")]),v._v(" "),t("ul",[t("li",[v._v("获取 CSS 属性值\n"),t("ul",[t("li",[t("code",[v._v("getComputedStyle(obj).attr")])])])]),v._v(" "),t("li",[v._v("设置 CSS 属性值\n"),t("ul",[t("li",[t("code",[v._v('obj.style.attr="值"')]),v._v("，行内样式")]),v._v(" "),t("li",[t("code",[v._v('obj.style.cssText="值"')]),v._v("，行内样式，cssText 的值是一个字符串，使用原生 CSS 写法")])])])]),v._v(" "),t("p",[v._v("在实际开发的时候，如果要为一个元素同时设置多个 CSS 属性，我们很少使用 cssText 来实现，而更倾向于使用操作 HTML 属性的方式给元素加上一个 class 属性值，从而整体地给元素添加上样式。")]),v._v(" "),t("h2",{attrs:{id:"dom-遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-遍历"}},[v._v("#")]),v._v(" DOM 遍历")]),v._v(" "),t("p",[v._v("DOM 遍历，也就是查找元素，主要以“当前所选元素”为基点，然后查找它的父元素、子元素或者兄弟元素。")]),v._v(" "),t("ul",[t("li",[v._v("DOM 遍历（查找父、子、兄弟）：\n"),t("ul",[t("li",[t("code",[v._v("obj.parentNode")]),v._v("：获得某个元素的父元素")]),v._v(" "),t("li",[t("code",[v._v("obj.childNodes")]),v._v("、"),t("code",[v._v("obj.firstChild")]),v._v("、"),t("code",[v._v("obj.lastChild")]),v._v("："),t("code",[v._v("childNodes")]),v._v(" 获取的是所有的子节点，包括元素节点以及文本节点")]),v._v(" "),t("li",[t("code",[v._v("obj.children")]),v._v("、"),t("code",[v._v("obj.firstElementChild")]),v._v("、"),t("code",[v._v("obj.lastElementChild")]),v._v("：只针对元素节点的操作属性")]),v._v(" "),t("li",[t("code",[v._v("obj.previousSibling")]),v._v("、"),t("code",[v._v("obj.nextSibling")]),v._v("：查找前、后一个兄弟节点")]),v._v(" "),t("li",[t("code",[v._v("obj.previousElementSibling")]),v._v("、"),t("code",[v._v("obj.nextElementSibling")]),v._v("：查找前、后一个兄弟元素节点")])])])]),v._v(" "),t("h2",{attrs:{id:"innerhtml-和-innertext"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#innerhtml-和-innertext"}},[v._v("#")]),v._v(" innerHTML 和 innerText")]),v._v(" "),t("p",[v._v("在 JavaScript 中，我们可以使用 "),t("code",[v._v("innerHTML")]),v._v(" 属性很方便地获取和设置一个元素的“内部元素”，也可以使用 "),t("code",[v._v("innerText")]),v._v(" 属性获取和设置一个元素的“内部文本”。")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("obj.innerHTML")]),v._v("：获取的是元素内部所有的内容")]),v._v(" "),t("li",[t("code",[v._v("obj.innerText")]),v._v("：获取的仅仅是文本内容")])])])}),[],!1,null,null,null);t.default=l.exports}}]);