(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{529:function(v,_,e){"use strict";e.r(_);var t=e(4),a=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("div",{staticClass:"custom-block theorem"},[_("p",{staticClass:"title"},[v._v("本章概要")]),_("p",[v._v("❑ 弹性容器和弹性元素"),_("br"),v._v("\n❑ 主轴和副轴"),_("br"),v._v("\n❑ Flexbox 里的元素大小"),_("br"),v._v("\n❑ Flexbox 里的元素对齐")])]),v._v(" "),_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#flexbox-的原则"}},[v._v("Flexbox 的原则")])]),_("li",[_("a",{attrs:{href:"#弹性子元素的大小"}},[v._v("弹性子元素的大小")])]),_("li",[_("a",{attrs:{href:"#弹性方向"}},[v._v("弹性方向")])]),_("li",[_("a",{attrs:{href:"#对齐、间距等细节"}},[v._v("对齐、间距等细节")])]),_("li",[_("a",{attrs:{href:"#值得注意的地方"}},[v._v("值得注意的地方")])]),_("li",[_("a",{attrs:{href:"#总结"}},[v._v("总结")])])])]),_("p"),v._v(" "),_("h2",{attrs:{id:"flexbox-的原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flexbox-的原则"}},[v._v("#")]),v._v(" Flexbox 的原则")]),v._v(" "),_("ul",[_("li",[v._v("给元素添加 "),_("code",[v._v("display: flex")]),v._v("，该元素变成了一个弹性容器（flex container） ，它的直接子元素变成了弹性子元素（flex item）")]),v._v(" "),_("li",[v._v("弹性子元素默认是在同一行按照从左到右的顺序并排排列")]),v._v(" "),_("li",[v._v("弹性容器像块元素一样填满可用宽度，但是弹性子元素不一定填满其弹性容器的宽度")]),v._v(" "),_("li",[v._v("弹性子元素高度相等，该高度由它们的内容决定")])]),v._v(" "),_("p",[v._v("在本例中，弹性容器应该是无序列表 "),_("code",[v._v("<ul>")]),v._v("。它的子元素，即列表项 "),_("code",[v._v("<li>")]),v._v(" 就是弹性子元素。")]),v._v(" "),_("p",[v._v("弹性盒子内的 "),_("code",[v._v("auto")]),v._v(" 外边距会填充所有可用空间。")]),v._v(" "),_("h2",{attrs:{id:"弹性子元素的大小"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#弹性子元素的大小"}},[v._v("#")]),v._v(" 弹性子元素的大小")]),v._v(" "),_("p",[v._v("前面的代码使用外边距给弹性子元素设置了间距。你可以用 "),_("code",[v._v("width")]),v._v(" 和 "),_("code",[v._v("height")]),v._v(" 属性设置它们大小，但是比起 "),_("code",[v._v("margin")]),v._v("、"),_("code",[v._v("width")]),v._v("、"),_("code",[v._v("height")]),v._v(" 这些常见属性，Flexbox 提供了更多更强大的选项。")]),v._v(" "),_("p",[_("code",[v._v("flex")]),v._v(" 属性控制弹性子元素在主轴方向上的大小（在这里指的元素的宽度）。代码清单 5-6 将给网页的主区域应用弹性布局，并使用 "),_("code",[v._v("flex")]),v._v(" 属性控制每一列的大小。")]),v._v(" "),_("p",[_("code",[v._v("flex")]),v._v(" 属性是三个不同大小属性的简写："),_("code",[v._v("flex-grow")]),v._v("、"),_("code",[v._v("flex-shrink")]),v._v(" 和 "),_("code",[v._v("flex-basis")]),v._v("。在代码清单 5-7 里，只提供了 "),_("code",[v._v("flex-grow")]),v._v(" 的值，剩下的两个属性是默认值（分别是 1 和 0%），因此 "),_("code",[v._v("flex: 2")]),v._v(" 等价于 "),_("code",[v._v("flex: 2 1 0%")]),v._v("。通常首选简写属性，但也可以分别声明三个属性。")]),v._v(" "),_("p",[v._v("与大部分简写属性不一样，如果在 "),_("code",[v._v("flex")]),v._v(" 中忽略某个子属性，那么子属性的值并不会被置为初始值。相反，如果某个子属性被省略，那么 "),_("code",[v._v("flex")]),v._v(" 简写属性会给出有用的默认值："),_("code",[v._v("flex-grow")]),v._v(" 为 1、"),_("code",[v._v("flex-shrink")]),v._v(" 为 1、"),_("code",[v._v("flex-basis")]),v._v(" 为 0%。这些默认值正是大多数情况下所需要的值。")]),v._v(" "),_("p",[v._v("每个子元素的 "),_("code",[v._v("flex-shrink")]),v._v(" 值代表了它是否应该收缩以防止溢出。如果某个子元素为 "),_("code",[v._v("flex-shrink: 0")]),v._v("，则不会收缩；如果值大于 0，则会收缩至不再溢出。按照 "),_("code",[v._v("flex-shrink")]),v._v(" 值的比例，值越大的元素收缩得越多。")]),v._v(" "),_("h2",{attrs:{id:"弹性方向"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#弹性方向"}},[v._v("#")]),v._v(" 弹性方向")]),v._v(" "),_("h2",{attrs:{id:"对齐、间距等细节"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对齐、间距等细节"}},[v._v("#")]),v._v(" 对齐、间距等细节")]),v._v(" "),_("h2",{attrs:{id:"值得注意的地方"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#值得注意的地方"}},[v._v("#")]),v._v(" 值得注意的地方")]),v._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("ol",[_("li",[v._v("全局重置盒尺寸")]),v._v(" "),_("li",[v._v("全局外边距，通过猫头鹰选择器，只给容器内从第二个开始往后的子元素添加 "),_("code",[v._v("margin-top")]),v._v("，即容器内第一个子元素不设置 "),_("code",[v._v("margin-top")]),v._v("。这样设置之后，外边距只存在于上下排列的 "),_("strong",[v._v("子元素之间")])]),v._v(" "),_("li",[v._v("双容器，用于网页内容居中。外层容器是 "),_("code",[v._v("body")]),v._v("，内层窗口是 "),_("code",[v._v(".container")]),v._v("，并将外边距 "),_("code",[v._v("margin")]),v._v(" 设置为 "),_("code",[v._v("auto")])]),v._v(" "),_("li",[v._v("更棒的是，Flexbox 允许使用 "),_("code",[v._v("margin: auto")]),v._v(" 来填充弹性子元素之间的可用空间。弹性盒子内的 "),_("code",[v._v("auto")]),v._v(" 外边距会填充所有可用空间")])])])}),[],!1,null,null,null);_.default=a.exports}}]);